name: Test

on: [push, pull_request]

jobs:
  abi3-wheel:
    name: Build ABI3 wheel
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.6']
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python build dependencies
        run: python -m pip install maturin pytest
      - name: Build Python abi3 wheel using Python ${{ matrix.python-version }}
        run: maturin build --release -i ${{ env.pythonLocation}}/python
        if: runner.os != 'Windows'
      - name: Build Python abi3 wheel using Python ${{ matrix.python-version }} (Windows)
        run: maturin build --release -i ${{ env.pythonLocation }}\python.exe
        if: runner.os == 'Windows'
      - name: Local tests
        shell: bash
        run: |
          pip install target/wheels/snakefusion*.whl
          pytest
      - name: Upload wheel
        uses: actions/upload-artifact@v2
        with:
          name: wheel ${{ matrix.python-version }} ${{ matrix.os }}
          path: target/wheels/snakefusion*.whl
          retention-days: 1

  test:
    name: Test wheel
    needs: abi3-wheel
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Download wheel
        uses: actions/download-artifact@v2
        with:
          name: wheel 3.6 ${{ matrix.os }}
      - name: Install pytest
        run: pip install pytest
      - name: Install snakefusion wheel
        shell: bash
        run: pip install snakefusion*.whl
      - name: Run tests
        run: |
          pytest
