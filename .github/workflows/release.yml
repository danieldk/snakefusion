name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release-macos:
    name: macOS universal wheel
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        target: aarch64-apple-darwin
    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Install build tools
      run: |
        pip install maturin
    - name: Build abi3 wheel
      env:
        DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
        MACOSX_DEPLOYMENT_TARGET: '10.9'
      run: |
        maturin build --release --universal2 -i `which python3.6`
    - name: Upload wheel
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: target/wheels/*.whl

  release-linux-x86_64:
    name: x86_64 manylinux wheel
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install Rust
      run: |
        curl --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain stable -y
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    - name: Set up Python 3.6
      run: |
        echo "/opt/python/cp36-cp36m/bin" >> $GITHUB_PATH
        echo "PYROOT=/opt/python/cp36-cp36m" >> $GITHUB_ENV
        echo "PYBIN=/opt/python/cp36-cp36m/bin" >> $GITHUB_ENV
    - name: Install MKL
      run: |
        ${{ env.PYBIN }}/pip install mkl-static==2021.4.0
        ln -s ${{ env.PYROOT }}/lib ${{ env.PYROOT }}/lib/intel64
        echo "MKLROOT=${{ env.PYROOT }}" >> $GITHUB_ENV
    - name: Install build tools
      run: |
        ${{ env.PYBIN }}/pip install auditwheel maturin
    - name: Build abi3 wheel
      run: |
        ${{ env.PYBIN }}/maturin build --release \
          -i ${{ env.PYBIN }}/python \
          --cargo-extra-args='--features="intel-mkl"' \
          --compatibility manylinux2014
    - name: Audit wheel
      run: |
        for wheel in target/wheels/*.whl; do
          ${{ env.PYBIN }}/auditwheel repair "${wheel}"
        done
    - name: Upload wheel
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: wheelhouse/*.whl

  release-windows:
    name: Windows wheel
    strategy:
      matrix:
        python-version: ['3.6']
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install build tools
      run: |
        pip install maturin
    - name: Build Python ${{ matrix.python-version}} wheel
      run: |
        maturin build --release -i ${{ env.pythonLocation }}\python.exe
    - name: Upload wheel
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: target/wheels/*.whl

  release-github:
    name: Publish to GitHub releases
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ release-macos, release-linux-x86_64, release-windows ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.whl
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          draft: true
